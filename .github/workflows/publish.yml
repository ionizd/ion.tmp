name: publish

env:
  NETCORE_VERSION: 5.0.101
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

on:
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
    - edited
    - closed
    branches:
    - main
    paths:
      - ".github/workflows/publish.yml"
      - "build/**"
      - "ion.core/**"
      - "ion.extensions/**"
      - "ion.logging/**"
      - "ion.microservices/**"
  workflow_dispatch:
    inputs: {}

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: nuget.config (pwsh)
      shell: pwsh
      run: |
        $nuget = @"
        <?xml version="1.0" encoding="utf-8"?>
        <configuration>
          <packageSources>
            <add key="nuget.org" value="https://api.nuget.org/v3/index.json" protocolVersion="3" />
            <add key="nuget.cloudtek.io" value="${{ secrets.NUGET_FEED_CLOUDTEK }}" protocolVersion="3"/>
            <add key="nuget.ionizd.io" value="${{ secrets.NUGET_FEED_IONIZD }}" protocolVersion="3"/>
          </packageSources>
          <packageRestore>
            <add key="enabled" value="True" />
            <add key="automatic" value="True" />
          </packageRestore>
          <bindingRedirects>
            <add key="skip" value="False" />
          </bindingRedirects>
          <packageManagement>
            <add key="format" value="0" />
            <add key="disabled" value="False" />
          </packageManagement>
          <packageSourceCredentials>
            <nuget.cloudtek.io>
              <add key="Username" value="${{ secrets.NUGET_USERNAME }}"/>
              <add key="ClearTextPassword" value="${{ secrets.NUGET_PASSWORD }}" />
            </nuget.cloudtek.io>
            <nuget.ionizd.io>
              <add key="Username" value="${{ secrets.NUGET_USERNAME }}"/>
              <add key="ClearTextPassword" value="${{ secrets.NUGET_PASSWORD }}" />
            </nuget.ionizd.io>
          </packageSourceCredentials>
        </configuration>
        "@

        $nuget | Out-File -FilePath ${{ github.workspace }}/nuget.config
    - name: dotnet tool restore
      run: dotnet tool restore
      shell: bash
    - uses: actions/setup-dotnet@v1
      name: dotnet installer
      with:
        dotnet-version: ${{ env.NETCORE_VERSION }}
    - name: check pull_request.head.ref
      if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged }}
      run: |
        BRANCH="${{ github.event.pull_request.head.ref }}"
        if [[ $BRANCH =~ (release\/)([0-9]+\.[0-9]+)(\.[0-9]+)? ]]
        then
          echo "::set-env name=version::${BASH_REMATCH[2]}"
        fi
      shell: bash
    - name: tag (pull_request.head.ref)
      if: ${{ env.version != null }}
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: false
        RELEASE_BRANCHES: main
        INITIAL_VERSION: 0.0.1
        CUSTOM_TAG: ${{ env.version }}
        VERBOSE: true
    - name: gitversion
      shell: bash
      if: always()
      working-directory: ${{ github.workspace }}
      run: |
       dotnet gitversion
    - id: buld-system
      if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed') }}
      uses: cloud-tek/actions/build-system@v0.6
      name: build-system
      with:
        directory: ${{ github.workspace }}
        Compile:      'true'
        Pack:         'true'
        Push:         'true'
        NuGetApiUrl:  '${{ secrets.NUGET_FEED_IONIZD }}'
        NuGetApiKey:  '${{ secrets.NUGET_PASSWORD }}'
    - id: buld-system-pr
      if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
      uses: cloud-tek/actions/build-system@v0.6
      name: build-system (pr)
      with:
        directory: ${{ github.workspace }}
        Compile:      'true'
        Pack:         'true'
        Push:         'true'
        NuGetApiUrl:  'https://nuget.pkg.github.com/ionizd/index.json'
        NuGetApiKey:  '${{ secrets.NUGET_PASSWORD }}'
    - name: gitversion
      shell: bash
      if: always()
      working-directory: ${{ github.workspace }}
      run: |
       dotnet gitversion
    - name: diag
      shell: bash
      if: always()
      working-directory: ${{ github.workspace }}
      run: |
        echo Hi ${{ github.actor }}
        echo ${{ github.event_name }}
        echo ${{ github.event.action }}
        echo ${{ github.event.pull_request.merged }}
        apt update && apt install tree --yes
        tree