name: ci

on:
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
    - edited
    # - closed
    branches:
    - main
  workflow_dispatch:

jobs:
  build:
    name: build ${{ matrix.dotnet-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: 
        os: 
        - ubuntu-latest
        - windows-latest
        - macos-latest
        dotnet-version:
        - '6.0.100'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: nuget.config (pwsh)
      shell: pwsh
      run: |
        $nuget = @"
        <?xml version="1.0" encoding="utf-8"?>
        <configuration>
          <packageSources>
            <add key="nuget.org" value="https://api.nuget.org/v3/index.json" protocolVersion="3" />
            <add key="nuget.cloudtek.io" value="${{ secrets.NUGET_FEED_CLOUDTEK }}" protocolVersion="3"/>
          </packageSources>
          <packageRestore>
            <add key="enabled" value="True" />
            <add key="automatic" value="True" />
          </packageRestore>
          <bindingRedirects>
            <add key="skip" value="False" />
          </bindingRedirects>
          <packageManagement>
            <add key="format" value="0" />
            <add key="disabled" value="False" />
          </packageManagement>
          <packageSourceCredentials>
            <nuget.cloudtek.io>
              <add key="Username" value="${{ secrets.NUGET_USERNAME }}"/>
              <add key="ClearTextPassword" value="${{ secrets.NUGET_PASSWORD }}" />
            </nuget.cloudtek.io>
          </packageSourceCredentials>
        </configuration>
        "@

        $nuget | Out-File -FilePath ${{ github.workspace }}/nuget.config
    - name: dotnet tool restore
      run: dotnet tool restore
      shell: bash
    - uses: actions/setup-dotnet@v1
      name: dotnet installer
      with:
        dotnet-version: 5.0.403
    - uses: actions/setup-dotnet@v1
      name: dotnet installer
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - id: buld-system
      uses: cloud-tek/actions/build-system@v0.6
      name: build-system
      with:
        directory: ${{ github.workspace }}
        Compile:      'true'
        UnitTests:    'true'
    - name: diag
      if: ${{ matrix.os == 'ubuntu-latest' }}
      shell: bash
      run: |
        tree ${{ github.workspace }}
    - name: trx parser
      uses: NasAmin/trx-parser@v0.1.1
      id: trx-parser
      with:
        TRX_PATH: ${{ github.workspace }}/tests/results
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}